set nocompatible
filetype plugin on
syntax on
let g:mapleader = " "
let g:maplocalleader = ','

" plugins
let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif
call plug#begin()
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'junegunn/goyo.vim'
Plug 'junegunn/limelight.vim'
Plug 'junegunn/vim-easy-align'
Plug 'liuchengxu/vim-which-key'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-sensible'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-vinegar'
Plug 'vimwiki/vimwiki'
Plug 'michal-h21/vim-zettel'
call plug#end()

" appearance
set termguicolors
set background=light
colorscheme quiet

" vimwiki
let g:vimwiki_list = [{'path': '~/git/vimwiki/',
                      \ 'syntax': 'markdown', 'ext': 'md'}]
let g:vimwiki_global_ext = 0

" vim-zettel
let g:zettel_fzf_command = "rg --column --line-number --ignore-case --no-heading --color=always "
nnoremap <leader>zn :ZettelNew<space>
nnoremap <leader>zo :ZettelOpen<cr>

" fzf.vim keymaps
nnoremap <silent> <leader>ff :Files<cr>
nnoremap <silent> <leader>fg :GFiles<cr>
nnoremap <silent> <leader>fb :Buffers<cr>
nnoremap <silent> <leader>fr :Rg<cr>
nnoremap <silent> <leader>fa :Lines<cr>
nnoremap <silent> <leader>fl :BLines<cr>

" goyo and limelight
nmap <leader>g :Goyo<cr>
nmap <Leader>ll <Plug>(Limelight)
xmap <Leader>ll <Plug>(Limelight)
nmap <Leader>lt :Limelight!!<cr>
autocmd! User GoyoEnter Limelight
autocmd! User GoyoLeave Limelight!

" vim-easy-align binds
" Start interactive EasyAlign in visual mode (e.g. vipga)
xmap ga <Plug>(EasyAlign)
" Start interactive EasyAlign for a motion/text object (e.g. gaip)
nmap ga <Plug>(EasyAlign)
