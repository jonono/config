#+title: sway.org
#+PROPERTY: header-args text :mkdirp yes :tangle dot-config/sway/config

* variables
modkey is logo/super
left/down/up/right is hjkl
terminal is wezterm
menu is bemenu

#+begin_src text
set $mod Mod4
set $left h
set $down j
set $up k
set $right l
set $term wezterm
set $menu bemenu-run -n -p ">" -l "10 down" --fn "Fira Code Nerd Font 10" --tb "#707070" --tf "#1f1f1f" --fb "#707070" --ff "#1f1f1f" --cb "#707070" --cf "#1f1f1f" --nb "#1f1f1f" --nf "#707070" --hb "#707070" --hf "#1f1f1f" --ab "#1f1f1f" --af "#707070"
#+end_src

* look and feel
#+begin_src text
default_border none
default_floating_border none
titlebar_padding 1
titlebar_border_thickness 0
gaps inner 5
#+end_src

* input
#+begin_src text
input "type:touchpad" {
	tap enabled
	natural_scroll enabled
}
#+end_src

* output
#+begin_src text
output * bg #1f1f1f solid_color
#+end_src

* keybindings
** base
#+begin_src text

  bindsym $mod+Return exec $term
  bindsym $mod+Shift+q kill
  bindsym $mod+space exec $menu
  floating_modifier $mod normal
  bindsym $mod+Shift+c reload

#+end_src
** keys
#+begin_src text

  set $volume_helper_cmd /home/jon/.config/sway/volume-helper

  bindsym --locked {
          XF86AudioRaiseVolume exec \
              $volume_helper_cmd --limit "$volume_limit" --increase "$volume_step"
          XF86AudioLowerVolume exec \
              $volume_helper_cmd --limit "$volume_limit" --decrease "$volume_step"
          XF86AudioMute    exec pactl set-sink-mute @DEFAULT_SINK@ toggle && $volume_helper_cmd
          XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
  }

  set $brightness_notification_cmd  command -v notify-send >/dev/null && \
            VALUE=$(brightnessctl --percentage get) && \
            notify-send -e -h string:x-canonical-private-synchronous:brightness \
                -h "int:value:$VALUE" -t 800 "Brightness: ${VALUE}%"

  bindsym XF86MonBrightnessDown exec \
            'STEP="$brightness_step" && brightnessctl -q set ${STEP:-5}%- && $brightness_notification_cmd'
  bindsym XF86MonBrightnessUp exec \
            'STEP="$brightness_step" && brightnessctl -q set +${STEP:-5}% && $brightness_notification_cmd'

  bindsym --locked {
      XF86AudioPlay       exec playerctl play-pause
      XF86AudioStop       exec playerctl stop
  }

  bindsym {
      XF86AudioForward    exec playerctl position +10
      XF86AudioNext       exec playerctl next
      XF86AudioPause      exec playerctl pause
      XF86AudioPrev       exec playerctl previous
      XF86AudioRewind     exec playerctl position -10
  }

#+end_src
** move focus
#+begin_src text

  bindsym $mod+$left focus left
  bindsym $mod+$down focus down
  bindsym $mod+$up focus up
  bindsym $mod+$right focus right

#+end_src

** move focused window
#+begin_src text

  bindsym $mod+Shift+$left move left
  bindsym $mod+Shift+$down move down
  bindsym $mod+Shift+$up move up
  bindsym $mod+Shift+$right move right
 
#+end_src

** workspaces
*** switch to workspace
#+begin_src text

  bindsym $mod+1 workspace number 1
  bindsym $mod+2 workspace number 2
  bindsym $mod+3 workspace number 3
  bindsym $mod+4 workspace number 4
  bindsym $mod+5 workspace number 5
  bindsym $mod+6 workspace number 6
  bindsym $mod+7 workspace number 7
  bindsym $mod+8 workspace number 8
  bindsym $mod+9 workspace number 9
  bindsym $mod+0 workspace number 10

#+end_src
*** move focused container to workspace
#+begin_src text

  bindsym $mod+Shift+1 move container to workspace number 1
  bindsym $mod+Shift+2 move container to workspace number 2
  bindsym $mod+Shift+3 move container to workspace number 3
  bindsym $mod+Shift+4 move container to workspace number 4
  bindsym $mod+Shift+5 move container to workspace number 5
  bindsym $mod+Shift+6 move container to workspace number 6
  bindsym $mod+Shift+7 move container to workspace number 7
  bindsym $mod+Shift+8 move container to workspace number 8
  bindsym $mod+Shift+9 move container to workspace number 9
  bindsym $mod+Shift+0 move container to workspace number 10

#+end_src

** splits
#+begin_src text

  bindsym $mod+b splith
  bindsym $mod+v splitv

#+end_src

** switching layout styles
#+begin_src text

  bindsym $mod+s layout stacking
  bindsym $mod+w layout tabbed
  bindsym $mod+e layout toggle split

#+end_src

** floating window
#+begin_src text

  bindsym $mod+Shift+space floating toggle
  bindsym $mod+m focus mode_toggle

#+end_src

** focus parent
#+begin_src text

  bindsym $mod+a focus parent

#+end_src

** resizing
#+begin_src text

  mode "resize" {
      # left will shrink the containers width
      # right will grow the containers width
      # up will shrink the containers height
      # down will grow the containers height
      bindsym $left resize shrink width 10px
      bindsym $down resize grow height 10px
      bindsym $up resize shrink height 10px
      bindsym $right resize grow width 10px

      # Ditto, with arrow keys
      bindsym Left resize shrink width 10px
      bindsym Down resize grow height 10px
      bindsym Up resize shrink height 10px
      bindsym Right resize grow width 10px

      # Return to default mode
      bindsym Return mode "default"
      bindsym Escape mode "default"
  }
  bindsym $mod+r mode "resize"

#+end_src

* bar
#+begin_src text

  bar {
    swaybar_command waybar
  }

#+end_src

* swayidle
#+begin_src text

  exec LT="$lock_timeout" ST="$screen_timeout" LT=${LT:-300} ST=${ST:-60} && \
    swayidle -w \
        timeout $LT 'swaylock -f -c 101010' \
        timeout $((LT + ST)) 'swaymsg "output * power off"' \
                      resume 'swaymsg "output * power on"'  \
        timeout $ST 'pgrep -xu "$USER" swaylock >/dev/null && swaymsg "output * power off"' \
             resume 'pgrep -xu "$USER" swaylock >/dev/null && swaymsg "output * power on"'  \
        before-sleep 'swaylock -f' \
        lock 'swaylock -f' \
        unlock 'pkill -xu "$USER" -SIGUSR1 swaylock'

#+end_src
* execs
#+begin_src text

  exec_always killall dunst

#+end_src
* includes
#+begin_src text

  include /etc/sway/config.d/*

#+end_src
